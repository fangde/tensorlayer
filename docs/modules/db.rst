API - Database
=========================

This is the alpha version of database management system.
If you have trouble, you can ask for help on `fangde.liu@imperial.ac.uk <fangde.liu@imperial.ac.uk>`_ .


.. note::
   We are writing up the documentation, please wait in patient.


Why TensorDB
----------------

TensorLayer is designed for production, aiming to be applied large scale machine learning application. 
TensorDB introduce the database infracture to address the many challenges in large scale machine learning project, such as 

1. how to mangage the training data and load the training datasets
2. When the dataset is so large that beyonds the storage limitation of one computer
3. how shoud we managment different models and version, and comparing different models.
4. How to automate the whole training, evaluaiton and deploy machine learning model automatically.


In the TensorLayer system, we introduce the database technology to the issues above.

There is an academic publication which could be seen as the white paper of the TensorDB system.
<https://www.dropbox.com/s/jyuy54n8t7k3l2e/tensordb-database-infrastructure.pdf?dl=0>


TensorDB is designed by following three principles.

Everything is Data
----------------------

TensorDB is a data  warehouse that stores that capture the whole machine learning development process. the data inside tensordb can be catagloried as

1. Data and Labels. Which includes all the data for training, validation and prediction. The labels can be manually labelled or generated by machine
2. Model Architecture.This group store the different model architecture, which user can select to use
3. Model Parameters.This tables stores all the model parameters of echo in the training step.
4.  Jobs.all the computation  is cutted into several jobs. Each jobs constains some computing work load. for training , the jobs includes training data , the model parameter, the model architecture, how many epochs the training want to do. Similarity are the validation jobs and inference jobs. 
5. Logs. The logs store all the step time and accuracy and other metric of each training steps and also the time stamps.

TensorDB is in principal is a key-word based search engine.  each model, parameters, or training data are assigned many tags.
The data are stored in two layers. On the top, there is the index layer, which instore the blob storage reference with all the tags assigned to the data. which is implemented based on NoSQL document database such as mongodb. The second layer is used store big chunk of data, such as videos, medical images or image mask, which is usually implemented as file system.   Our open source implementation is implemented based MongoDB. The blob data is in store in the gridfs while the tag index is  stored in the documents.




XXX:

 - ``xxx`` : xxx.
 - ``xxx`` : xxx.
 - ``xxx`` : xxx.


``xxx`` = [x, x, x, x, x, x]

xxx ``xxx`` or ``xxx``.

Preparation
--------------

Install MongoDB
^^^^^^^^^^^^^^^^^
xx

Start MongoDB service
^^^^^^^^^^^^^^^^^^^^^^^^

Connect to database
----------------------
.. code-block:: python
  from tensorlayer.db import TensorDB
  db = TensorDB(ip='146.169.15.140', port=27017, db_name='your_db', user_name=None, password=None, studyID='1')

Save and load data
---------------------

Save data
^^^^^^^^^^^^^^^

Load data
^^^^^^^^^^^^^^










.. automodule:: tensorlayer.db

.. autoclass:: TensorDB
   :members:
